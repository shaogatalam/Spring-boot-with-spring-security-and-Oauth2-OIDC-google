spring.application.name=springOauth
# GOOGLE OAuth2 Client Configuration
#spring.security.oauth2.client.registration.google.client-id=97969431174-ll7ntakjoju9jtbrqo4vdsc18rgjp9tt.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.registration.google.scope=profile, email
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.google.client-name=Google

# GitHub OAuth2 Client Configuration
spring.security.oauth2.client.registration.github.client-id=Ov23lirPHE3Y9Crpupww
spring.security.oauth2.client.registration.github.client-secret=80d4064a202819f079642b6ef72fe0cb3949d585
spring.security.oauth2.client.registration.github.scope=user:email, read:user
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/github
spring.security.oauth2.client.registration.github.client-name=GitHub

# GOOGLE OAuth2 Provider Configuration
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/t_order
spring.datasource.username=root
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Thymeleaf Configuration
spring.thymeleaf.cache=false
